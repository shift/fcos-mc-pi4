variant: fcos
version: 1.4.0
passwd:
  users:
    - name: core
      ssh_authorized_keys:
        - ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBGudjVmaFrNFWvUVZSGk2frMLAz1820uz0yNUp2NNKDj59SeqbwIliW3X4rpyeCKL6fvyO+xYRSNg1WaezZT3tc=

storage:
  files:
    - path: /etc/hostname
      mode: 0644
      contents:
        inline: |
          mcs
    - path: /etc/local_exporter/config.toml
      contents:
            local: local_exporter.conf
    - path: /usr/local/bin/mc_plugins
      mode: 0755
      contents:
            local: mc_plugins.sh
    - path: /etc/sysconfig/nftables.conf
      append:
            - inline: include "/etc/nftables/custom.nft"
    - path: /etc/nftables/custom.nft
      contents:
            local: nft-rules
    - path: /etc/zincati/config.d/55-updates-strategy.toml
      contents:
        inline: |
          [updates]
          strategy = "periodic"
          [[updates.periodic.window]]
          days = [ "Tue" ]
          start_time = "06:30"
          length_minutes = 60
  links:
    - path: /etc/alternatives/iptables
      target: /usr/sbin/iptables-nft
      overwrite: true
      hard: false
    - path: /etc/alternatives/iptables-restore
      target: /usr/sbin/iptables-nft-restore
      overwrite: true
      hard: false
    - path: /etc/alternatives/iptables-save
      target: /usr/sbin/iptables-nft-save
      overwrite: true
      hard: false
    - path: /etc/alternatives/ip6tables
      target: /usr/sbin/ip6tables-nft
      overwrite: true
      hard: false
    - path: /etc/alternatives/ip6tables-restore
      target: /usr/sbin/ip6tables-nft-restore
      overwrite: true
      hard: false
    - path: /etc/alternatives/ip6tables-save
      target: /usr/sbin/ip6tables-nft-save
      overwrite: true
      hard: false

systemd:
  units:
    - name: podman.socket
      enabled: true
    - name: podman.service
      enabled: true
    - name: deploy-configuration-ssh-key.service
      enabled: true
      contents: |
        [Unit]
        Description=Adds the configuration specified SSH_KEY into the core users authorized_keys.
        After=coreos-ignition-firstboot-complete.service

        [Service]
        Type=oneshot

        EnvironmentFile=/boot/configuration
        PreExecStart=-/usr/bin/mkdir -p /home/core/.ssh/authorized_keys.d
        ExecStart=/usr/bin/echo $SSH_KEY > /home/core/.ssh/authorized_keys.d/configuration
        ExecStartPost=/usr/bin/chown -R core:core /home/core/.ssh/authorized_keys.d
        ExecStartPost=/usr/bin/chmod 0600 /home/core/.ssh/authorized_keys.d/configuration
        
        [Install]
        WantedBy=multi-user.target default.target
    - name: container-update.service
      enabled: true
      contents: |
        [Unit]
        Description=Podman auto update containers

        [Service]
        Type=oneshot

        ExecStart=/usr/bin/podman auto-update
        ExecStartPost=/usr/bin/podman container prune --force
        ExecStartPost=/usr/bin/podman image prune --all --force
        
        [Install]
        WantedBy=multi-user.target default.target
    - name: container-update.timer
      enabled: true
      contents: |
        [Unit]
        Description=daily update containers

        [Timer]
        OnCalendar=*-*-* 00:00:00
        Persistent=true
        RandomizedDelaySec=2h

        [Install]
        WantedBy=timers.target
    - name: firstboot-wifi.service
      enabled: true
      contents: |
        [Unit]
        Description=Configures WiFi if requested on first-boot.
        After=NetworkManager.service
        ConditionPathExists=/boot/wifi.txt
        [Service]
        Type=oneshot
        EnvironmentFile=/boot/wifi.txt
        PreExecStart=-/usr/bin/rpm-ostree install --apply-live bcm283x-firmware.aarch64 NetworkManager-wifi.aarch64
        PreExecStart=-/usr/bin/systemctl restart NetworkManager
        PreExecStart=-/usr/bin/sleep 10
        ExecStart=/usr/bin/nmcli dev wifi connect ${SSID} password ${PASSPHRASE}
        ExecStopPort=/usr/bin/rm /boot/wifi.txt
        [Install]
        WantedBy=multi-user.target default.target

    - name: minecraft.service
      enabled: true
      contents: |
        [Unit]
        Description=minecraft.service
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=network-online.target
        RequiresMountsFor=%t/containers
        [Service]
        EnvironmentFile=/boot/configuration
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStartPre=-/usr/local/bin/mc_plugins
        ExecStart=/usr/bin/podman run --label="io.containers.autoupdate=image" --cgroups=no-conmon --rm --sdnotify=conmon -d --replace -it --name %N -e EULA=TRUE  -e DIFFICULTY -e MODE -e MOTD -e SERVER_NAME -e ALLOW_NETHER -e ANNOUNCE_PLAYER_ACHIEVEMENTS -e ENABLE_COMMAND_BLOCK -e SPAWN_ANIMALS -e SPAWN_MONSTERS -e SPAWN_NPCS -e SPAWN_PROTECTION -e GENERATE_STRUCTURES -e VIEW_DISTANCE -e HARDCORE -e SNOOPER_ENABLED -e MAX_BUILD_HEIGHT -e FORCE_GAMEMODE -e MAX_TICK_TIME -e ENABLE_QUERY -e QUERY_PORT -e ENABLE_RCON -e RCON_PASSWORD -e RCON_PORT -e MAX_PLAYERS -e MAX_WORLD_SIZE -e LEVEL -e SEED -e PVP -e GENERATOR_SETTINGS -e ONLINE_MODE -e ALLOW_FLIGHT -e RESOURCE_PACK -e RESOURCE_PACK_SHA1 -e RESOURCE_PACK_ENFORCE -e PLAYER_IDLE_TIMEOUT -e BROADCAST_CONSOLE_TO_OPS -e BROADCAST_RCON_TO_OPS -e ENABLE_JMX -e SYNC_CHUNK_WRITES -e ENABLE_STATUS -e ENTITY_BROADCAST_RANGE_PERCENTAGE -e FUNCTION_PERMISSION_LEVEL -e NETWORK_COMPRESSION_THRESHOLD -e OP_PERMISSION_LEVEL -e PREVENT_PROXY_CONNECTIONS -e USE_NATIVE_TRANSPORT -e SIMULATION_DISTANCE -e PREVIEWS_CHAT -e ENFORCE_SECURE_PROFILE -e INITIAL_ENABLED_PACKS -e INITIAL_DISABLED_PACKS -e TYPE=PAPER -p 19132:19132/udp -p 25565:25565 -v /opt/minecraft:/data:Z docker.io/itzg/minecraft-server
        ExecStop=/usr/bin/podman stop --ignore %N
        Type=notify
        NotifyAccess=all
        [Install]
        WantedBy=default.target

    - name: podman-exporter.service
      enabled: true
      contents: |
        [Unit]
        Description=podman-exporter.service
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStart=/usr/bin/podman run \
                --cgroups=no-conmon \
                --sdnotify=conmon \
                --replace \
                --name %N \
                -d \
                -p 9882:9882 \
                -e CONTAINER_HOST=unix:///run/podman/podman.sock \
                -v /run/podman/podman.sock:/run/podman/podman.sock \
                -u root \
                --security-opt label=disable ghcr.io/shift/prometheus-podman-exporter:latest
        ExecStop=/usr/bin/podman stop --ignore %N
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target


    - name: node-exporter.service
      enabled: true
      contents: |
        [Unit]
        Description=Exporter for machine metrics.
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=network-online.target
        RequiresMountsFor=%t/containers

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStart=/usr/bin/podman run \
            --cgroups=no-conmon \
            --detach \
            --name node_exporter \
            --net host \
            --pid host \
            --publish 9100:9100 \
            --replace \
            --sdnotify=conmon \
            --volume /:/host:ro,rslave \
            --volume /var/run/dbus/system_bus_socket:/var/run/dbus/system_bus_socket \
            docker.io/prom/node-exporter:latest \
            --collector.processes \
            --collector.systemd \
            --path.rootfs=/host
        ExecStop=/usr/bin/podman stop --ignore %N
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target

    - name: local-exporter.service
      enabled: true
      contents: |
        [Unit]
        Description=local_exporter.service
        Documentation=man:podman-generate-systemd(1)
        Wants=network-online.target
        After=zincati.service
        RequiresMountsFor=%t/containers

        [Service]
        Environment=PODMAN_SYSTEMD_UNIT=%n
        Restart=on-failure
        TimeoutStopSec=70
        ExecStart=/usr/bin/podman run \
                --cgroups=no-conmon \
                --rm \
                --sdnotify=conmon \
                -d \
                --replace \
                --name %N \
                -it \
                --privileged \
                -p9598:9598 \
                -v /:/host \
                -v /run/zincati/public/metrics.promsock:/metrics.socket:Z \
                -v /etc/local_exporter/config.toml:/etc/local_exporter/config.toml:Z \
                -it ghcr.io/shift/local_exporter:v0.0.16
        ExecStop=/usr/bin/podman stop \
                --ignore -t 10 \
                %N
        Type=notify
        NotifyAccess=all

        [Install]
        WantedBy=default.target
